$(function() {

    function prettify(data) {
        return {
            currentColour : data.turn.colour,
            turn : data.turn,
            rollsAllowed : data.rollsAllowed,
            players : data.players.map(playerArray => playerArray[1]),
            roll : data.roll,
            waitingForMove : data.waitingForMove
        }
    }

    function setFields(player) {
        $(`.field-cell`).removeClass(player.colour);
        let fields = player.occupiedFields;
        fields.forEach(field => {
            $(`#${field}`).addClass(`${player.colour} ${player.colour}-field-cell`)
        });
    }

    function setMoveHandler(fieldId) {
        $(`#${fieldId}`).on("click", () => {
            console.log(fieldId);
            $.get("/move/" + fieldId).then(data => handleResponse(data))
            $(".rollbutton").prop("disabled", false)
        })
    }

    function cleanHouse(player) {
        let playerHouseCells = $(`.${player.colour}-house-cell`);
        playerHouseCells.each((index) => {
            if (index >= player.inHouse) {
                $(`#house-${player.colour}-${index + 1}`).removeClass(player.colour).addClass("white");
            }
        })
    }

    function showRoll(roll) {
        return roll === 0 ? "" : roll
    }

    function handleResponse(data) {
        console.log(data);
        $(".die").html(`<h1 class="roll-value">${showRoll(data.roll)}</h1>`)
        $(".turn").removeClass().addClass(`${data.turn.colour} turn`)
        data.players.forEach(player => {
            setFields(player)
            cleanHouse(player)
        });
    }

    function init() {

        $("#1").addClass("start-field")
        $("#11").addClass("start-field")
        $("#21").addClass("start-field")
        $("#31").addClass("start-field")

        $.get("@{InitR}").then(data => handleResponse(prettify(data)));

        $(".rollbutton").on("click", () => {
            $.get("@{RollR}").then(data => {
                console.log("got data from click")
                let cleanData = prettify(data);
                handleResponse(cleanData);
                if (cleanData.waitingForMove) {
                    console.log("Waiting for move...")
                    $(".rollbutton").prop("disabled", true).addClass("disabled-button")
                    let activePlayer = cleanData.turn
                    console.log(activePlayer)
                    activePlayer.occupiedFields.forEach(field => setMoveHandler(field))

                }
            });
        });

    }

    init();

});
